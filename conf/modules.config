/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CAT_NANOPORE_FASTQ {
        publishDir = [
            path: { "${params.outdir}/cat_nanopore_fastq/${meta.id}" },
            mode: params.publish_dir_mode
        ]
    }

    withName: PORECHOP_ABI {
        publishDir = [
            path: { "${params.outdir}/porechop_abi/${meta.id}" },
            mode: params.publish_dir_mode
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: SAMTOOLS_VIEW {
        ext.args = '-f4 -b'
        ext.prefix = { "${meta.id}.unmapped" }
    }

    withName: MINIMAP2_ILLUMINA {
        ext.args = '-ax sr'
    }

    withName: MINIMAP2_NANOPORE {
        ext.args = '-ax map-ont'
    }

    withName: RAW_FASTQC {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/raw_fastqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: TRIM_FASTQC {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/trim_fastqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: RAW_MULTIQC {
        publishDir = [
            path: { "${params.outdir}/raw_multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: TRIM_MULTIQC {
        publishDir = [
            path: { "${params.outdir}/trim_multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: TRIMMOMATIC {
         ext.args2 = 'ILLUMINACLIP:adapters.fa:2:30:10 LEADING:3 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:36'
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: DRAGONFLYE {
        publishDir = [
            path: { "${params.outdir}/assembly/${meta.id}" },
            mode: params.publish_dir_mode,
            pattern: '*.{gfa,log,fasta,fa,txt}'
        ]
    }

    withName: SHOVILL {
        publishDir = [
            path: { "${params.outdir}/assembly/${meta.id}" },
            mode: params.publish_dir_mode,
            pattern: '*.{gfa,log,fasta,yml,corrections,LastGraph}'
        ]
        ext.args = "--assembler ${params.sr_assembler}"
    }

    withName: RENAME_CTG {
        publishDir = [
            path: { "${params.outdir}/assembly/${meta.id}" },
            mode: params.publish_dir_mode,
            pattern: '*.fa'
        ]
    }

    if ( params.combine_quast ) {
        withName: QUAST {
            publishDir = [
                path: { "${params.outdir}" },
                mode: params.publish_dir_mode
            ]
        }
    } else {
        withName: QUAST {
            publishDir = [
                path: { "${params.outdir}/quast/${consensus.simpleName}" },
                mode: params.publish_dir_mode
            ]
        }
    }

    withName: BUSCO {
        publishDir = [
            path: { "${params.outdir}/busco" },
            mode: params.publish_dir_mode,
            pattern: '*.txt'
        ]
        ext.args = '--mode genome --tar'
    }

    withName: RMLST {
        publishDir = [
            path: { "${params.outdir}/RMLST" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }

    withName: RMLSTPARSE {
        publishDir = [
            [
            path: { "${params.outdir}/RMLSTparsed/summary" },
            mode: params.publish_dir_mode,
            pattern: '*_sum.csv'
            ],
            [
            path: { "${params.outdir}/RMLSTparsed/allele" },
            mode: params.publish_dir_mode,
            pattern: '*_allele.csv'
            ]
        ]
    }

}
